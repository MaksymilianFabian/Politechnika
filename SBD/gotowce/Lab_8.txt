Laby 8
Zadanie 1.
insert into pracownicy(id_prac, nazwisko, etat, id_szefa, zatrudniony, placa_pod, placa_dod, id_zesp)
values(250, 'KOWALSKI', 'ASYSTENT',null ,date '2015-01-13', 1500, null, 10),
(260, 'ADAMSKI', 'ASYSTENT',null ,date '2014-09-10', 1500, null, 10),
(270, 'NOWAK', 'ADIUNKT',null ,date '1990-05-1', 2050, 540, 20);
select * from pracownicy where id_prac in (250, 260, 270);

Zadanie 2.
update pracownicy
set placa_pod = placa_pod + placa_pod * 0.1,
placa_dod = coalesce(placa_dod + placa_dod * 0.2, 100)
where id_prac in (250, 260, 270);
select * from pracownicy where id_prac in (250, 260, 270);

Zadanie 3.
insert into zespoly(id_zesp, nazwa, adres) values(60, 'BAZY DANYCH', 'PIOTROWO 2');
select * from zespoly where id_zesp = 60;

Zadanie 4.
update pracownicy
set id_zesp = (select id_zesp from zespoly where nazwa = 'BAZY DANYCH')
where id_prac in (250, 260, 270);
select * from pracownicy where id_prac in (250, 260, 270);

Zadanie 5.
update pracownicy
set id_szefa = (select id_prac from pracownicy where nazwisko='MORZY')
where id_zesp = (select id_zesp from zespoly where nazwa='BAZY DANYCH');
select * from pracownicy p
where id_szefa = (select id_prac from pracownicy where nazwisko='MORZY');

Zadanie 6.
delete from zespoly
where nazwa = 'BAZY DANYCH';
Przez powiązanie tabeli kluczem obcym z innymi tabelami

Zadanie 7.
delete from pracownicy
where id_zesp = (select id_zesp from zespoly where nazwa ='BAZY DANYCH');
delete from zespoly
where nazwa='BAZY DANYCH';
select * from pracownicy p where id_prac in (250, 260, 270);
select * from zespoly z where nazwa='BAZY DANYCH';
select * from pracownicy p where id_zesp = (select id_zesp from zespoly z where nazwa='BAZY DANYCH');

Zadanie 8.
with srednia_placa_w_zespole as
(select z.id_zesp, avg(placa_pod) as srednia_placa
from pracownicy p
join zespoly z
on p.id_zesp = z.id_zesp
group by z.id_zesp)
select p.nazwisko, p.placa_pod, s.srednia_placa * 0.1 as podwyzka 
from srednia_placa_w_zespole s
join pracownicy p
on p.id_zesp = s.id_zesp
order by nazwisko;



Zadanie 9.
with srednia_placa_w_zespole as
(select z.id_zesp, avg(placa_pod) as srednia_placa
from pracownicy p
join zespoly z
on p.id_zesp = z.id_zesp
group by z.id_zesp)
update pracownicy 
set placa_pod = placa_pod + s.srednia_placa * 0.1
from srednia_placa_w_zespole s
where pracownicy.id_zesp = s.id_zesp;

select nazwisko, placa_pod 
from pracownicy
order by nazwisko;

Zadanie 10.
select * from
pracownicy
where placa_pod = (select min(placa_pod)
  from pracownicy);

Zadanie 11.
with srednia_placa_pracownikow as
(select avg(placa_pod) as srednia_placa
from pracownicy)
update pracownicy 
set placa_pod = round(srednia_placa, 2)
from srednia_placa_pracownikow
where placa_pod = (select min(placa_pod)
  from pracownicy);

select * 
from pracownicy
where id_prac = 200;

Zadanie 12.
with srednia_placa_pracownikow as
(select avg(p.placa_pod) as srednia_placa
from pracownicy p
join pracownicy s
on p.id_szefa = s.id_prac
where s.nazwisko = 'MORZY')
update pracownicy
set placa_dod = srednia_placa
from srednia_placa_pracownikow
where id_zesp = 20;

select nazwisko, placa_dod 
from pracownicy
where id_zesp = 20;

Zadanie 13.
update pracownicy
set placa_pod = placa_pod + placa_pod * 0.25
where id_zesp = (select id_zesp
from zespoly 
where nazwa = 'SYSTEMY ROZPROSZONE');

select nazwisko, placa_pod
from pracownicy
where id_zesp = (select id_zesp
from zespoly 
where nazwa = 'SYSTEMY ROZPROSZONE');

Zadanie 14.
DELETE FROM pracownicy
WHERE id_prac IN (
    SELECT p.id_prac
    FROM pracownicy p
    JOIN pracownicy s ON p.id_szefa = s.id_prac
    WHERE s.nazwisko = 'MORZY'
);

select p.nazwisko as pracownik, s.nazwisko as szef
from pracownicy p
join pracownicy s
on p.id_szefa = s.id_prac
where s.nazwisko = 'MORZY'

Zadanie 15.
select * from pracownicy order by nazwisko;

Zadanie 16.
select * from pracownicy order by nazwisko;

Zadanie 17.
insert into pracownicy(id_prac, nazwisko, etat, placa_pod)
values(nextval('prac_seq'),'Trąbczyński', 'STAZYSTA', 1000);

select * from pracownicy where nazwisko = 'Trąbczyński';

Zadanie 18.
UPDATE pracownicy
SET placa_dod = currval('prac_seq')
WHERE nazwisko = 'Trąbczyński';

select * from pracownicy where nazwisko = 'Trąbczyński'

Zadanie 19.
delete from pracownicy
where nazwisko = 'Trąbczyński';

Zadanie 20.
CREATE SEQUENCE MALA_SEQ 
START WITH 1 
INCREMENT BY 1 
MAXVALUE 10; 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ'); 
SELECT nextval('MALA_SEQ');
SELECT nextval('MALA_SEQ');
SELECT nextval('MALA_SEQ');

Gdy następuje przekroczenie wartości maksymalnej sekwencji MALA_SEQ, PostgreSQL automatycznie zaczyna od nowa od wartości startowej, czyli 1

Zadanie 21.
drop sequence MALA_SEQ;